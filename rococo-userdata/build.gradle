plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'guru.qa'
version '0.0.6-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka:3.0.7'
    implementation 'net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//docker {
//    dependsOn build
//    name "dtuchs/niffler-userdata:${project.version}"
//    tag 'latest', 'dtuchs/niffler-userdata:latest'
//    files bootJar.archiveFile
//    buildArgs([APP_VER: project.version, DOCKER: project.ext.dockerImage])
//    noCache true
//}
//
//tasks.register('dockerRmi', Exec) {
//    workingDir "${buildDir}"
//    commandLine 'bash', '-c', "docker rmi -f \$(docker images | grep 'niffler')\n"
//}


tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
